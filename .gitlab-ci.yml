# @file    .gitlab-ci.yml - GitLab CI configuration file.
# @author  Eddie Roosenmallen <eddie@distributive.network>
# @date    September 2022

default:
  # Use in-house GitLab runners.
  tags:
    - dcp-core
    - linux

stages:
  - build
  - deploy

tidelift:
  stage: build
  rules:
    - when: never
  variables:
    # This should be kept in a GitLab Variable. Read more:
    # https://docs.gitlab.com/ee/ci/variables/#create-a-custom-variable-in-the-ui
    TIDELIFT_API_KEY: $TIDELIFT_API_KEY
  # The CLI only requires `glibc`.
  image: frolvlad/alpine-glibc
  before_script:
    - apk add --no-cache curl
    - echo "Downloading Tidelift CLI"
    - curl https://download.tidelift.com/cli/tidelift -o tidelift
    - echo "Setting permissions"
    - chmod +x tidelift
  script:
    - echo "Running alignment and saving to Tidelift"
    - ./tidelift alignment save --wait
  allow_failure: true
  cache: []

publish_docs:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - catalog-info.yaml
          - docs/
          # Symlinked into `docs/`, but changes are only detected for by the
          # source file.`
          - README.md
  variables:
    AWS_ACCESS_KEY_ID: $BACKSTAGE_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $BACKSTAGE_ACCESS_SECRET
    AWS_DEFAULT_REGION: 'us-east-1'
    AWS_REGION: 'us-east-1'
    TECHDOCS_S3_BUCKET_NAME: 'backstage.distributive.network'
    ENTITY_NAMESPACE: 'default'
  stage: deploy
  needs: []
  image: registry.gitlab.com/distributed-compute-protocol/docker/dcp-ci:2023-09-13
  script:
    - npm clean-install
    - python3 -m pip install mkdocs mkdocs-techdocs-core==1.* mkdocs-same-dir
    - bin/publish-docs.sh
