# @file    .gitlab-ci.yml - GitLab CI configuration file.
# @author  Eddie Roosenmallen <eddie@distributive.network>
# @date    September 2022

default:
  # Use in-house GitLab runners.
  tags:
    - dcp
    - linux

stages:
  - build
  - deploy

tidelift:
  stage: build
  variables:
    # This should be kept in a GitLab Variable. Read more:
    # https://docs.gitlab.com/ee/ci/variables/#create-a-custom-variable-in-the-ui
    TIDELIFT_API_KEY: $TIDELIFT_API_KEY
  # The CLI only requires `glibc`.
  image: frolvlad/alpine-glibc
  before_script:
    - apk add --no-cache curl
    - echo "Downloading Tidelift CLI"
    - curl https://download.tidelift.com/cli/tidelift -o tidelift
    - echo "Setting permissions"
    - chmod +x tidelift
  script:
    - echo "Running alignment and saving to Tidelift"
    - ./tidelift alignment save --wait
  allow_failure: true
  cache: []

publish_docs:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "develop"'
    - if: '$CI_COMMIT_REF_NAME == "main"'
    - changes:
        - catalog-info.yaml
        - docs/mkdocs.yml
        - docs/*.md
  variables:
    AWS_ACCESS_KEY_ID: $BACKSTAGE_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $BACKSTAGE_ACCESS_SECRET
    AWS_DEFAULT_REGION: 'us-east-1'
    AWS_REGION: 'us-east-1'
  stage: deploy
  tags: [dcp, linux]
  image: node:latest
  script:
    - apt-get update && apt-get install tree fd-find python3 python3-pip python-is-python3 -y
    - npm install -g @techdocs/cli
    - python3 -m pip install mkdocs mkdocs-techdocs-core==1.*
    - pip install mkdocs-same-dir
    - wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod a+x /usr/local/bin/yq
    - ./publish-docs.sh
